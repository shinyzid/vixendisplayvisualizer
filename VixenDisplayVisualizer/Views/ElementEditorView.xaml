<UserControl x:Class="Vixen.PlugIns.VixenDisplayVisualizer.Views.ElementEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vdv="clr-namespace:Vixen.PlugIns.VixenDisplayVisualizer"
             xmlns:Pixels="clr-namespace:Vixen.PlugIns.VixenDisplayVisualizer.Pixels"
             mc:Ignorable="d"
             d:DesignHeight="600"
             d:DesignWidth="600"
             HorizontalAlignment="Center">
	<UserControl.Resources>
		<ResourceDictionary>
			<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
			<vdv:BooleanToCollapsedConverter x:Key="BooleanToCollapsedConverter" />
			<vdv:ColorToColorNameConverter x:Key="ColorNameToColorconverter" />
			<ObjectDataProvider MethodName="GetColors"
			                    ObjectType="{x:Type vdv:LightColors}"
			                    x:Key="LightColors">
			</ObjectDataProvider>

			<DataTemplate DataType="{x:Type Pixels:EmptyPixel}">
				<Border HorizontalAlignment="Stretch"
				        VerticalAlignment="Stretch"
				        Background="Black"
				        CornerRadius="5"
				        Margin="2"
				        Padding="2"
				        BorderThickness="2"
				        BorderBrush="AntiqueWhite">
					<TextBlock VerticalAlignment="Center"
					           HorizontalAlignment="Center"
					           Foreground="AntiqueWhite">
						Empty Channel
					</TextBlock>
				</Border>
			</DataTemplate>
			<DataTemplate DataType="{x:Type Pixels:SingleColorPixel}">
				<Border BorderBrush="White"
				        Background="Black"
				        HorizontalAlignment="Stretch"
				        VerticalAlignment="Stretch"
				        Margin="2"
				        Padding="2"
				        BorderThickness="2">
					<Grid>
						<Grid Visibility="{Binding Path=IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
							<Grid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<GroupBox Header="Channel">
								<ComboBox SelectedItem="{Binding Channel, Mode=TwoWay}"
								          ItemsSource="{Binding DataContext.Channels, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
							</GroupBox>

							<GroupBox Header="Display Color"
							          Grid.Row="1">
								<ComboBox ItemsSource="{Binding Source={StaticResource LightColors}}"
								          SelectedItem="{Binding DisplayColor, Mode=TwoWay, Converter={StaticResource ColorNameToColorconverter}}" />
							</GroupBox>
						</Grid>
						<Grid Visibility="{Binding Path=IsSelected, Converter={StaticResource BooleanToCollapsedConverter}, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
							<StackPanel VerticalAlignment="Center">
								<TextBlock Foreground="White"
								           HorizontalAlignment="Center">
									Single Color Channel
								</TextBlock>
								<TextBlock Foreground="White"
								           HorizontalAlignment="Center"
								           Text="{Binding Channel.Name}" />
								<TextBlock Foreground="White"
								           HorizontalAlignment="Center"
								           Text="{Binding DisplayColor, Converter={StaticResource ColorNameToColorconverter}}" />
							</StackPanel>
						</Grid>
					</Grid>
				</Border>
			</DataTemplate>
			<DataTemplate DataType="{x:Type Pixels:RedGreenBluePixel}">
				<Border BorderBrush="White"
				        Background="Black"
				        HorizontalAlignment="Stretch"
				        VerticalAlignment="Stretch"
				        Margin="2"
				        Padding="2"
				        BorderThickness="2">
					<Grid>
						<StackPanel Visibility="{Binding Path=IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
							<GroupBox Header="Red Channel"
							          Foreground="White">
								<ComboBox Grid.Column="1"
								          Grid.Row="0"
								          SelectedItem="{Binding RedChannel, Mode=TwoWay}"
								          ItemsSource="{Binding DataContext.Channels, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
							</GroupBox>
							<GroupBox Header="Green Channel"
							          Foreground="White">
								<ComboBox Grid.Column="1"
								          Grid.Row="1"
								          SelectedItem="{Binding GreenChannel, Mode=TwoWay}"
								          ItemsSource="{Binding DataContext.Channels, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
							</GroupBox>
							<GroupBox Header="Blue Channel"
							          Foreground="White">
								<ComboBox Grid.Column="1"
								          Grid.Row="2"
								          SelectedItem="{Binding BlueChannel, Mode=TwoWay}"
								          ItemsSource="{Binding DataContext.Channels, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
							</GroupBox>
						</StackPanel>
						<StackPanel Visibility="{Binding Path=IsSelected, Converter={StaticResource BooleanToCollapsedConverter}, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
							<TextBlock Foreground="White"
							           HorizontalAlignment="Center">
								RGB Channel
							</TextBlock>
							<TextBlock Foreground="White"
							           HorizontalAlignment="Center"
							           Text="{Binding RedChannel, StringFormat='Red Channel: {0}'}" />
							<TextBlock Foreground="White"
							           HorizontalAlignment="Center"
							           Text="{Binding GreenChannel, StringFormat='Green Channel: {0}'}" />
							<TextBlock Foreground="White"
							           HorizontalAlignment="Center"
							           Text="{Binding BlueChannel, StringFormat='Blue Channel: {0}'}" />
						</StackPanel>
					</Grid>
				</Border>
			</DataTemplate>
			<DataTemplate DataType="{x:Type Pixels:RedGreenBlueWhitePixel}">
				<Border BorderBrush="White"
				        Background="Black"
				        HorizontalAlignment="Stretch"
				        VerticalAlignment="Stretch"
				        Margin="2"
				        Padding="2"
				        BorderThickness="2">
					<Grid>
						<StackPanel Visibility="{Binding Path=IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
							<GroupBox Header="Red Channel"
							          Foreground="White">
								<ComboBox SelectedItem="{Binding RedChannel, Mode=TwoWay}"
								          ItemsSource="{Binding DataContext.Channels, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
							</GroupBox>
							<GroupBox Header="Green Channel"
							          Foreground="White">
								<ComboBox Grid.Row="1"
								          SelectedItem="{Binding GreenChannel, Mode=TwoWay}"
								          ItemsSource="{Binding DataContext.Channels, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
							</GroupBox>
							<GroupBox Header="Blue Channel"
							          Foreground="White">
								<ComboBox SelectedItem="{Binding BlueChannel, Mode=TwoWay}"
								          ItemsSource="{Binding DataContext.Channels, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
							</GroupBox>
							<GroupBox Header="White Channel"
							          Foreground="White">
								<ComboBox SelectedItem="{Binding WhiteChannel, Mode=TwoWay}"
								          ItemsSource="{Binding DataContext.Channels, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
							</GroupBox>
						</StackPanel>
						<StackPanel Visibility="{Binding Path=IsSelected, Converter={StaticResource BooleanToCollapsedConverter}, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
							<TextBlock Foreground="White"
							           HorizontalAlignment="Center">
								RGB+W Channel
							</TextBlock>
							<TextBlock Foreground="White"
							           HorizontalAlignment="Center"
							           Text="{Binding RedChannel, StringFormat='Red Channel: {0}'}" />
							<TextBlock Foreground="White"
							           HorizontalAlignment="Center"
							           Text="{Binding GreenChannel, StringFormat='Green Channel: {0}'}" />
							<TextBlock Foreground="White"
							           HorizontalAlignment="Center"
							           Text="{Binding BlueChannel, StringFormat='Blue Channel: {0}'}" />
							<TextBlock Foreground="White"
							           HorizontalAlignment="Center"
							           Text="{Binding WhiteChannel, StringFormat='White Channel: {0}'}" />
						</StackPanel>
					</Grid>
				</Border>
			</DataTemplate>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		<Border CornerRadius="5"
		        Margin="2"
		        Padding="2">
			<ContentControl Content="{Binding DisplayElement}">
				<ContentControl.ContentTemplate>
					<DataTemplate DataType="{x:Type vdv:DisplayElement}">
						<StackPanel Orientation="Horizontal">
							<GroupBox Margin="2"
							          Padding="2"
							          Header="Name">
								<TextBox Text="{Binding Name}"
								         MinWidth="100" />
							</GroupBox>
							<GroupBox Margin="2"
							          Padding="2"
							          Header="Rows">
								<TextBox Text="{Binding Rows}"
								         MinWidth="30" />
							</GroupBox>
							<GroupBox Margin="2"
							          Padding="2"
							          Header="Columns">
								<TextBox MinWidth="30"
								         Text="{Binding Columns}" />
							</GroupBox>
							<GroupBox Margin="2"
							          Padding="2"
							          Header="Height">
								<TextBox MinWidth="30"
								         Text="{Binding Height}" />
							</GroupBox>
							<GroupBox Margin="2"
							          Padding="2"
							          Header="Width">
								<TextBox MinWidth="30"
								         Text="{Binding Width}" />
							</GroupBox>
						</StackPanel>
					</DataTemplate>
				</ContentControl.ContentTemplate>
			</ContentControl>

		</Border>
		<Border Grid.Row="1"
		        Background="Transparent"
		        VerticalAlignment="Stretch"
		        Margin="0"
		        Padding="0"
		        x:Name="ListBorder">
			<ListView ItemsSource="{Binding PixelMappings}"
			          HorizontalContentAlignment="Stretch"
			          VerticalContentAlignment="Stretch"
			          Height="{Binding ElementName=ListBorder, Path=Height}"
			          SelectedItem="{Binding CurrentPixelMapping}">
				<ListView.ItemsPanel>
					<ItemsPanelTemplate>
						<UniformGrid Rows="{Binding DisplayElement.Rows}"
						             Columns="{Binding DisplayElement.Columns}" />
					</ItemsPanelTemplate>
				</ListView.ItemsPanel>
				<ListView.ItemTemplate>
					<DataTemplate DataType="{x:Type Pixels:PixelMapping}">
						<Border BorderBrush="White"
						        Background="Black"
						        HorizontalAlignment="Stretch"
						        VerticalAlignment="Stretch"
						        Margin="2"
						        Padding="2"
						        BorderThickness="2">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<GroupBox Header="Change Channel Type"
								          Visibility="{Binding Path=IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
									<StackPanel Orientation="Horizontal">
										<Button Command="{Binding ConvertToEmptyCommand}">Empty</Button>
										<Button Command="{Binding ConvertToSingleCommand}">Single</Button>
										<Button Command="{Binding ConvertToRgbCommand}">RGB</Button>
										<Button Command="{Binding ConvertToRgbwCommand}">RGB+W</Button>
									</StackPanel>
								</GroupBox>
								<ContentControl Content="{Binding Pixel}"
								                Grid.Row="1" />
							</Grid>
						</Border>

					</DataTemplate>
				</ListView.ItemTemplate>
			</ListView>
		</Border>
	</Grid>

</UserControl>