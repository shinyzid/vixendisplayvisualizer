<Window x:Class="Vixen.Modules.DisplayPreviewModule.Views.SetupView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:WPF="clr-namespace:Vixen.Modules.DisplayPreviewModule.WPF"
        xmlns:Model="clr-namespace:Vixen.Modules.DisplayPreviewModule.Model"
        mc:Ignorable="d"
        SizeToContent="WidthAndHeight"
        x:Name="Instance">
	<Window.Resources>
		<ResourceDictionary>
			<Style TargetType="ListBoxItem"
			       x:Key="MyStyle">
				<Style.Resources>
					<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
					                 Color="Transparent" />
				</Style.Resources>
			</Style>

			<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
			<WPF:BooleanToCollapsedConverter x:Key="BooleanToCollapsedConverter" />

			<DataTemplate DataType="{x:Type Model:ChannelLocation}">
                <Ellipse Fill="{Binding DisplayColor, Mode=OneWay}"
                         ToolTip="{Binding ChannelName}"
				         Width="{Binding Width}"
				         Height="{Binding Height}" />
			</DataTemplate>

			<DataTemplate DataType="{x:Type Model:DisplayItem}">
				<Border BorderBrush="Gray"
				        Background="Transparent"
				        BorderThickness="1"
				        Height="{Binding Height, Mode=TwoWay}"
				        Width="{Binding Width, Mode=TwoWay}">
					<ItemsControl ItemsSource="{Binding ChannelLocations}"
					              HorizontalContentAlignment="Stretch"
					              VerticalContentAlignment="Stretch">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<Canvas ClipToBounds="True"
								        HorizontalAlignment="Left"
								        MaxWidth="{Binding Width}"
								        MaxHeight="{Binding Height}"
								        MinWidth="{Binding Width}"
								        MinHeight="{Binding Height}"
								        Width="{Binding Width}"
								        Height="{Binding Height}">
								</Canvas>
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemContainerStyle>
							<Style TargetType="ContentPresenter">
								<Setter Property="Canvas.Left"
								        Value="{Binding Path=LeftOffset, Mode=TwoWay}" />
								<Setter Property="Canvas.Top"
								        Value="{Binding Path=TopOffset, Mode=TwoWay}" />
							</Style>
						</ItemsControl.ItemContainerStyle>
					</ItemsControl>
				</Border>
			</DataTemplate>
		</ResourceDictionary>
	</Window.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<GroupBox Header="Commands">
				<StackPanel>
					<Button Margin="2"
					        Command="{Binding SetBackgroundCommand}">
						Set background
					</Button>
					<Button Margin="2"
					        Command="{Binding AddElementCommand}">
						Add Element
					</Button>
					<Button Margin="2"
					        Command="{Binding EditElementCommand}">
						Edit Element
					</Button>
					<Button Margin="2"
					        Command="{Binding DeleteElementCommand}">
						Delete Element
					</Button>
				</StackPanel>
			</GroupBox>
			<GroupBox Header="Display Elements"
			          Grid.Row="1">
				<ListView ItemsSource="{Binding DisplayItems}"
				          SelectedItem="{Binding CurrentDisplayElement}"
				          ItemContainerStyle="{StaticResource MyStyle}"
				          HorizontalContentAlignment="Stretch"
				          VerticalContentAlignment="Stretch">
					<ListView.ItemTemplate>
						<DataTemplate DataType="{x:Type Model:DisplayItem}">
							<Grid>
								<Grid Visibility="{Binding Path=IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
									<Border Margin="2"
									        Padding="2"
									        BorderBrush="Red"
									        SnapsToDevicePixels="True"
									        BorderThickness="2"
									        Background="Black"
									        CornerRadius="3">
										<StackPanel>
											<TextBlock Foreground="White"
											           Text="{Binding Name}" />
											<TextBlock Foreground="White">
												<TextBlock.Resources>
													<Style TargetType="Hyperlink"
													       BasedOn="{StaticResource {x:Type Hyperlink}}">
														<Setter Property="Foreground"
														        Value="LightSkyBlue" />
														<Style.Triggers>
															<MultiTrigger>
																<MultiTrigger.Conditions>
																	<Condition Property="IsMouseOver"
																	           Value="True" />
																	<Condition Property="IsEnabled"
																	           Value="True" />
																</MultiTrigger.Conditions>
																<Setter Property="Foreground"
																        Value="Yellow" />
															</MultiTrigger>

														</Style.Triggers>
													</Style>
												</TextBlock.Resources>
												<Hyperlink Command="{Binding Path=DataContext.MoveUpCommand, ElementName=Instance}">Move Up</Hyperlink>
												•
												<Hyperlink Command="{Binding Path=DataContext.MoveDownCommand, ElementName=Instance}">Move Down</Hyperlink>
												• Movable
												<CheckBox IsChecked="{Binding IsUnlocked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
											</TextBlock>
										</StackPanel>
									</Border>
								</Grid>

								<Grid Visibility="{Binding Path=IsSelected, Converter={StaticResource BooleanToCollapsedConverter}, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
									<Border Margin="2"
									        Padding="2"
									        BorderBrush="Gray"
									        SnapsToDevicePixels="True"
									        BorderThickness="2"
									        Background="Transparent"
									        CornerRadius="3">
										<TextBlock Foreground="Black"
										           Text="{Binding Name}" />
									</Border>
								</Grid>
							</Grid>
						</DataTemplate>
					</ListView.ItemTemplate>
				</ListView>
			</GroupBox>
			<Button Content="Close Setup"
			        Grid.Row="2"
			        Click="CloseButtonClick"
			        Margin="2">
			</Button>
		</Grid>
		<Grid Grid.Column="1">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>
			<Border CornerRadius="5"
			        Margin="2"
			        Padding="2">
				<StackPanel Orientation="Horizontal">
					<GroupBox Header="Width"
					          Padding="2"
					          HorizontalContentAlignment="Stretch">
						<TextBox Text="{Binding DisplayWidth, Mode=TwoWay}" />
					</GroupBox>
					<GroupBox Header="Height"
					          Padding="2"
					          HorizontalContentAlignment="Stretch">
						<TextBox Text="{Binding DisplayHeight, Mode=TwoWay}" />
					</GroupBox>
					<GroupBox Header="Opacity"
					          Padding="2"
					          HorizontalContentAlignment="Stretch">
						<Slider Value="{Binding Opacity, Mode=TwoWay}"
						        Width="100"
						        Minimum="0"
						        Maximum="1" />
					</GroupBox>
				</StackPanel>
			</Border>
			<Border x:Name="scrollborder"
			        Grid.Row="1"
			        BorderThickness="0">
				<ScrollViewer VerticalScrollBarVisibility="Auto"
				              HorizontalScrollBarVisibility="Auto"
				              HorizontalContentAlignment="Left"
				              VerticalContentAlignment="Top"
				              Width="{Binding ElementName=scrollborder, Path=Width}"
				              Height="{Binding ElementName=scrollborder, Path=Height}">
					<GroupBox Header="Display Layout"
					          BorderBrush="Black"
					          HorizontalAlignment="Left"
					          VerticalAlignment="Top"
					          BorderThickness="2">
						<ItemsControl Background="Black"
						              Width="{Binding DisplayWidth}"
						              Height="{Binding DisplayHeight}"
						              ItemsSource="{Binding DisplayItems}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<WPF:DragCanvas ClipToBounds="True"
									                HorizontalAlignment="Left"
									                MaxWidth="{Binding DisplayWidth}"
									                MaxHeight="{Binding DisplayHeight}"
									                MinWidth="{Binding DisplayWidth}"
									                MinHeight="{Binding DisplayHeight}"
									                Width="{Binding DisplayWidth}"
									                Height="{Binding DisplayHeight}">
										<Canvas.Background>
											<ImageBrush ImageSource="{Binding BackgroundImage}"
											            Opacity="{Binding Opacity}"
											            Stretch="Fill" />
										</Canvas.Background>
									</WPF:DragCanvas>
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemContainerStyle>
								<Style TargetType="ContentPresenter">
									<Setter Property="Canvas.Left"
									        Value="{Binding Path=LeftOffset, Mode=TwoWay}" />
									<Setter Property="Canvas.Top"
									        Value="{Binding Path=TopOffset, Mode=TwoWay}" />
									<Setter Property="WPF:DragCanvas.CanBeDragged"
									        Value="{Binding Path=IsUnlocked, Mode=TwoWay}" />
								</Style>
							</ItemsControl.ItemContainerStyle>
						</ItemsControl>

					</GroupBox>
				</ScrollViewer>
			</Border>
		</Grid>

	</Grid>
</Window>