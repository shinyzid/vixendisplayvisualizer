<UserControl x:Class="Vixen.PlugIns.VixenDisplayVisualizer.Views.SetupView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vdv="clr-namespace:Vixen.PlugIns.VixenDisplayVisualizer"
             xmlns:Pixels="clr-namespace:Vixen.PlugIns.VixenDisplayVisualizer.Pixels"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="300">
	<UserControl.Resources>
		<ResourceDictionary>

			<Style TargetType="ListBoxItem"
			       x:Key="MyStyle">
				<Style.Resources>
					<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
					                 Color="Transparent" />
				</Style.Resources>
			</Style>

			<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
			<vdv:BooleanToCollapsedConverter x:Key="BooleanToCollapsedConverter" />

			<DataTemplate DataType="{x:Type Pixels:SingleColorPixel}">
				<Border>
					<Border.Background>
						<SolidColorBrush Color="{Binding DisplayColor}" />
					</Border.Background>
				</Border>
			</DataTemplate>

			<DataTemplate DataType="{x:Type Pixels:EmptyPixel}">
				<Border>
					<Border.Background>
						<SolidColorBrush Color="DarkGray" />
					</Border.Background>
				</Border>
			</DataTemplate>

			<DataTemplate DataType="{x:Type Pixels:RedGreenBlueWhitePixel}">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="*" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<Border Margin="0"
					        BorderThickness="0"
					        Grid.Row="0"
					        Grid.Column="0">
						<Border.Background>
							<LinearGradientBrush StartPoint="1,1"
							                     EndPoint="0,0">
								<GradientStop Color="Red"
								              Offset="0" />
								<GradientStop Color="Transparent"
								              Offset="1" />
							</LinearGradientBrush>
						</Border.Background>
					</Border>

					<Border Margin="0"
					        BorderThickness="0"
					        Grid.Row="0"
					        Grid.Column="1">
						<Border.Background>
							<LinearGradientBrush StartPoint="0,1"
							                     EndPoint="1,0">
								<GradientStop Color="Green"
								              Offset="0" />
								<GradientStop Color="Transparent"
								              Offset="1" />
							</LinearGradientBrush>
						</Border.Background>
					</Border>

					<Border Margin="0"
					        BorderThickness="0"
					        Grid.Row="1"
					        Grid.Column="0">
						<Border.Background>
							<LinearGradientBrush StartPoint="1,0"
							                     EndPoint="0,1">
								<GradientStop Color="Blue"
								              Offset="0" />
								<GradientStop Color="Transparent"
								              Offset="1" />
							</LinearGradientBrush>
						</Border.Background>
					</Border>

					<Border Margin="0"
					        BorderThickness="0"
					        Grid.Row="1"
					        Grid.Column="1">
						<Border.Background>
							<LinearGradientBrush StartPoint="0,0"
							                     EndPoint="1,1">
								<GradientStop Color="White"
								              Offset="0" />
								<GradientStop Color="Transparent"
								              Offset="1" />
							</LinearGradientBrush>
						</Border.Background>
					</Border>
				</Grid>
			</DataTemplate>

			<DataTemplate DataType="{x:Type Pixels:RedGreenBluePixel}">
				<Border>
					<Border.Background>
						<LinearGradientBrush StartPoint="0,0"
						                     EndPoint="0,1">
							<GradientStop Color="Black"
							              Offset="0" />
							<GradientStop Color="Red"
							              Offset="0.2" />
							<GradientStop Color="Green"
							              Offset="0.5" />
							<GradientStop Color="Blue"
							              Offset="0.8" />
							<GradientStop Color="Black"
							              Offset="1" />
						</LinearGradientBrush>
					</Border.Background>
				</Border>
			</DataTemplate>

			<DataTemplate DataType="{x:Type vdv:DisplayElement}">
				<Border BorderBrush="Orange"
				        Background="Black"
				        BorderThickness="3"
				        Height="{Binding Height, Mode=TwoWay}"
				        Width="{Binding Width, Mode=TwoWay}">
					<ItemsControl ItemsSource="{Binding PixelMappings}"
					              HorizontalContentAlignment="Stretch"
					              VerticalContentAlignment="Stretch">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<UniformGrid Columns="{Binding Columns}"
								             Rows="{Binding Rows}" />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="{x:Type Pixels:PixelMapping}">
								<Border BorderBrush="LightGray"
								        BorderThickness="1"
								        VerticalAlignment="Stretch"
								        HorizontalAlignment="Stretch"
								        Background="Black">
									<ContentControl Content="{Binding Pixel}" />
								</Border>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Border>
			</DataTemplate>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<GroupBox Header="Available Elements">
				<ListView ItemsSource="{Binding DisplayElements}"
				          SelectedItem="{Binding CurrentDisplayElement}"
				          ItemContainerStyle="{StaticResource MyStyle}"
				          HorizontalContentAlignment="Stretch"
				          VerticalContentAlignment="Stretch">
					<ListView.ItemTemplate>
						<DataTemplate DataType="{x:Type vdv:DisplayElement}">
							<Grid>
								<Grid Visibility="{Binding Path=IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
									<Border Margin="2"
									        Padding="2"
									        BorderBrush="Red"
									        SnapsToDevicePixels="True"
									        BorderThickness="2"
									        Background="Black"
									        CornerRadius="3">
										<StackPanel>
											<TextBlock Foreground="White"
											           Text="{Binding Name}" />
										</StackPanel>
									</Border>
								</Grid>

								<Grid Visibility="{Binding Path=IsSelected, Converter={StaticResource BooleanToCollapsedConverter}, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
									<Border Margin="2"
									        Padding="2"
									        BorderBrush="Gray"
									        SnapsToDevicePixels="True"
									        BorderThickness="2"
									        Background="Transparent"
									        CornerRadius="3">
										<TextBlock Foreground="Black"
										           Text="{Binding Name}" />
									</Border>
								</Grid>
							</Grid>
						</DataTemplate>
					</ListView.ItemTemplate>
				</ListView>
			</GroupBox>
			<StackPanel Grid.Row="1">
				<Button Command="{Binding AddElementCommand}">Add Element</Button>
				<Button Command="{Binding EditElementCommand}">Edit Element</Button>
				<Button Command="{Binding DeleteElementCommand}">Delete Element</Button>
			</StackPanel>
		</Grid>
		<StackPanel Grid.Column="1">
			<Border CornerRadius="5"
			        Margin="2"
			        Padding="2">
				<StackPanel Orientation="Horizontal">
					<GroupBox Header="Width"
					          Padding="2"
					          HorizontalContentAlignment="Stretch">
						<TextBox Text="{Binding DisplayWidth, Mode=TwoWay}" />
					</GroupBox>
					<GroupBox Header="Height"
					          Padding="2"
					          HorizontalContentAlignment="Stretch">
						<TextBox Text="{Binding DisplayHeight, Mode=TwoWay}" />
					</GroupBox>
				</StackPanel>
			</Border>
			<GroupBox Header="Display Layout">
				<Border BorderThickness="0"
				        x:Name="CanvasBorder">
					<ItemsControl Background="LightCyan"
					              MinWidth="{Binding DisplayWidth}"
					              MaxWidth="{Binding DisplayWidth}"
					              MinHeight="{Binding DisplayHeight}"
					              MaxHeight="{Binding DisplayHeight}"
					              ItemsSource="{Binding DisplayElements}">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<vdv:DragCanvas />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemContainerStyle>
							<Style TargetType="ContentPresenter">
								<Setter Property="Canvas.Left"
								        Value="{Binding Path=LeftOffset, Mode=TwoWay}" />
								<Setter Property="Canvas.Top"
								        Value="{Binding Path=TopOffset, Mode=TwoWay}" />
							</Style>
						</ItemsControl.ItemContainerStyle>
					</ItemsControl>
				</Border>
			</GroupBox>
		</StackPanel>

	</Grid>
</UserControl>